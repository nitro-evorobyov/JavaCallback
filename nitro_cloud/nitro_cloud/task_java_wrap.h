/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.10
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_nitro_cloud_WRAP_H_
#define SWIG_nitro_cloud_WRAP_H_

class SwigDirector_TaskSwig : public nitro::task::TaskSwig, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_TaskSwig(JNIEnv *jenv, int sleepCount, int failedStep);
    SwigDirector_TaskSwig(JNIEnv *jenv, int sleepCount);
    virtual ~SwigDirector_TaskSwig();
    virtual nitro::task::TaskCallbackCommnad OnStarted(std::string const &someMessage);
    virtual nitro::task::TaskCallbackCommnad OnProgress(int progress, int upperBound, std::string const &someMessage);
    virtual void OnFinished(nitro::task::TaskResult taskResult, std::string const &someMessage);
public:
    bool swig_overrides(int n) {
      return (n < 3 ? swig_override[n] : false);
    }
protected:
    Swig::BoolArray<3> swig_override;
};


#endif
